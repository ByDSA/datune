{"version":3,"file":"Scale.js","sourceRoot":"","sources":["../../src/tonality/Scale.ts"],"names":[],"mappings":"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","sourcesContent":["import { Utils } from '../Utils';\r\nimport { ScaleModeUtils } from './ScaleModeUtils';\r\nimport { ScaleUtils } from './ScaleUtils';\r\n\r\nexport class Scale {\r\n    public static MAJOR = new Scale(2, 2, 1, 2, 2, 2, 1);\r\n    public static DORIAN = ScaleModeUtils.getMode(Scale.MAJOR, 2);\r\n    public static PHRYGIAN = ScaleModeUtils.getMode(Scale.MAJOR, 3);\r\n    public static LYDIAN = ScaleModeUtils.getMode(Scale.MAJOR, 4);\r\n    public static MIXOLYDIAN = ScaleModeUtils.getMode(Scale.MAJOR, 5);\r\n    public static MINOR = ScaleModeUtils.getMode(Scale.MAJOR, 6);\r\n    public static LOCRIAN = ScaleModeUtils.getMode(Scale.MAJOR, 7);\r\n\r\n    public static HARMONIC_MINOR = new Scale(2, 1, 2, 2, 1, 3, 1);\r\n    public static LOCRIAN_a6 = ScaleModeUtils.getMode(Scale.HARMONIC_MINOR, 2);\r\n    public static IONIAN_a5 = ScaleModeUtils.getMode(Scale.HARMONIC_MINOR, 3);\r\n    public static DORIAN_a4 = ScaleModeUtils.getMode(Scale.HARMONIC_MINOR, 4);\r\n    public static MIXOLYDIAN_b9_b13 = ScaleModeUtils.getMode(Scale.HARMONIC_MINOR, 5);\r\n    public static LYDIAN_a2 = ScaleModeUtils.getMode(Scale.HARMONIC_MINOR, 6);\r\n    public static SUPERLOCRIAN_bb7 = ScaleModeUtils.getMode(Scale.HARMONIC_MINOR, 7);\r\n\r\n    public static HARMONIC_MAJOR = new Scale(2, 2, 1, 2, 1, 3, 1);\r\n    public static DORIAN_b5 = ScaleModeUtils.getMode(Scale.HARMONIC_MAJOR, 2);\r\n    public static PHRYGIAN_b4 = ScaleModeUtils.getMode(Scale.HARMONIC_MAJOR, 3);\r\n    public static LYDIAN_b3 = ScaleModeUtils.getMode(Scale.HARMONIC_MAJOR, 4);\r\n    public static MIXOLYDIAN_b2 = ScaleModeUtils.getMode(Scale.HARMONIC_MAJOR, 5);\r\n    public static AEOLIAN_b1 = ScaleModeUtils.getMode(Scale.HARMONIC_MAJOR, 6);\r\n    public static LOCRIAN_bb7 = ScaleModeUtils.getMode(Scale.HARMONIC_MAJOR, 7);\r\n\r\n    public static MELODIC_MINOR = new Scale(2, 1, 2, 2, 2, 2, 1);\r\n    public static DORIAN_b2 = ScaleModeUtils.getMode(Scale.MELODIC_MINOR, 2);\r\n    public static LYDIAN_a5 = ScaleModeUtils.getMode(Scale.MELODIC_MINOR, 3);\r\n    public static LYDIAN_b7 = ScaleModeUtils.getMode(Scale.MELODIC_MINOR, 4);\r\n    public static MIXOLYDIAN_b13 = ScaleModeUtils.getMode(Scale.MELODIC_MINOR, 5);\r\n    public static LOCRIAN_a2 = ScaleModeUtils.getMode(Scale.MELODIC_MINOR, 6);\r\n    public static SUPERLOCRIAN = ScaleModeUtils.getMode(Scale.MELODIC_MINOR, 7);\r\n\r\n    public static DOUBLE_HARMONIC = new Scale(1, 3, 1, 2, 1, 3, 1);\r\n    public static LYDIAN_a2_a6 = ScaleModeUtils.getMode(Scale.DOUBLE_HARMONIC, 2);\r\n    public static ULTRAPHRYGIAN = ScaleModeUtils.getMode(Scale.DOUBLE_HARMONIC, 3);\r\n    public static HUNGARIAN_MINOR = ScaleModeUtils.getMode(Scale.DOUBLE_HARMONIC, 4);\r\n    public static ORIENTAL = ScaleModeUtils.getMode(Scale.DOUBLE_HARMONIC, 5);\r\n    public static IONIAN_AUGMENTED_a2 = ScaleModeUtils.getMode(Scale.DOUBLE_HARMONIC, 6);\r\n    public static LOCRIAN_bb3_bb7 = ScaleModeUtils.getMode(Scale.DOUBLE_HARMONIC, 7);\r\n\r\n    public static NEAPOLITAN_MINOR = new Scale(1, 2, 2, 2, 1, 3, 1);\r\n    public static NEAPOLITAN_MAJOR = new Scale(1, 2, 2, 2, 2, 2, 1);\r\n\r\n    // 6\r\n    public static BLUES_b5 = new Scale(3, 2, 1, 1, 3, 2);\r\n    public static BLUES_a4 = Scale.BLUES_b5.clone();\r\n\r\n    // 5\r\n    public static PENTATONIC_MINOR = new Scale(3, 2, 2, 3, 2);\r\n    public static PENTATONIC = ScaleModeUtils.getMode(Scale.PENTATONIC_MINOR, 2);\r\n    public static EGYPCIAN = ScaleModeUtils.getMode(Scale.PENTATONIC_MINOR, 3);\r\n    public static BLUES_MINOR = ScaleModeUtils.getMode(Scale.PENTATONIC_MINOR, 4);\r\n    public static BLUES_MAJOR = ScaleModeUtils.getMode(Scale.PENTATONIC_MINOR, 5);\r\n\r\n    // Symmetric\r\n    public static CHROMATIC = new Scale(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);\r\n    public static WHOLE_TONE = new Scale(2, 2, 2, 2, 2, 2);\r\n    public static AUGMENTED_TRIAD = new Scale(4, 4, 4);\r\n    public static DIMINISHED_7th = new Scale(3, 3, 3, 3);\r\n    public static MESSIAEN_V_TRUNCATED = new Scale(1, 5, 1, 5);\r\n    public static DOM7b5 = new Scale(4, 2, 4, 2);\r\n    public static MESSIAEN_INV_III_V_TRUNCATED_n2 = new Scale(1, 3, 1, 3, 1, 3);\r\n    public static HALF_DIMINISHED = new Scale(1, 2, 1, 2, 1, 2, 1, 2);\r\n    public static MESSIAEN_V = new Scale(1, 1, 4, 1, 1, 4);\r\n    public static RAGA_INDRUPRIYA_INDIA = new Scale(1, 3, 2, 3, 1, 2);\r\n    public static MESSIAEN_II_TRUNCATED_n3 = new Scale(3, 1, 2, 3, 1, 2);\r\n    public static MESSIAEN_III_INV = new Scale(2, 1, 1, 2, 1, 1, 2, 1, 1);\r\n    public static MESSIAEN_IV = new Scale(1, 1, 1, 3, 1, 1, 1, 3);\r\n    public static MESSIAEN_VI = new Scale(1, 1, 2, 2, 1, 1, 2, 2);\r\n    public static MESSIAEN_VII = new Scale(1, 1, 1, 1, 2, 1, 1, 1, 1, 2);\r\n\r\n    // Bebop\r\n    public static BEBOP_MAJOR = new Scale(2, 2, 1, 2, 1, 1, 2, 1);\r\n\r\n\r\n    public static allDiatonicScales(): Scale[] {\r\n        return [\r\n            this.MAJOR,\r\n            this.DORIAN,\r\n            this.PHRYGIAN,\r\n            this.LYDIAN,\r\n            this.MIXOLYDIAN,\r\n            this.MINOR,\r\n            this.LOCRIAN\r\n        ];\r\n    }\r\n\r\n    public static allHeptatonicScales(): Scale[] {\r\n        return []\r\n            .concat(this.allDiatonicScales())\r\n            .concat([\r\n                this.HARMONIC_MINOR,\r\n                this.LOCRIAN_a6,\r\n                this.IONIAN_a5,\r\n                this.DORIAN_a4,\r\n                this.MIXOLYDIAN_b9_b13,\r\n                this.LYDIAN_a2,\r\n                this.SUPERLOCRIAN_bb7,\r\n\r\n                this.HARMONIC_MAJOR,\r\n                this.DORIAN_b5,\r\n                this.PHRYGIAN_b4,\r\n                this.LYDIAN_b3,\r\n                this.MIXOLYDIAN_b2,\r\n                this.AEOLIAN_b1,\r\n                this.LOCRIAN_bb7,\r\n\r\n                this.MELODIC_MINOR,\r\n                this.DORIAN_b2,\r\n                this.LYDIAN_a5,\r\n                this.LYDIAN_b7,\r\n                this.MIXOLYDIAN_b13,\r\n                this.LOCRIAN_a2,\r\n                this.SUPERLOCRIAN,\r\n\r\n                this.DOUBLE_HARMONIC,\r\n                this.LYDIAN_a2_a6,\r\n                this.ULTRAPHRYGIAN,\r\n                this.HUNGARIAN_MINOR,\r\n                this.ORIENTAL,\r\n                this.IONIAN_AUGMENTED_a2,\r\n                this.LOCRIAN_bb3_bb7,\r\n\r\n                this.NEAPOLITAN_MINOR,\r\n                this.NEAPOLITAN_MAJOR\r\n            ]);\r\n    }\r\n\r\n    public static allBebopScales() {\r\n        return [\r\n            this.BEBOP_MAJOR\r\n        ];\r\n    }\r\n\r\n    public static allPentatonicScales() {\r\n        return [\r\n            this.PENTATONIC_MINOR,\r\n            this.PENTATONIC,\r\n            this.EGYPCIAN,\r\n            this.BLUES_MINOR\r\n        ];\r\n    }\r\n\r\n    public static allHexatonicScales() {\r\n        return [\r\n            this.BLUES_b5,\r\n            this.BLUES_a4,\r\n            this.WHOLE_TONE\r\n        ];\r\n    }\r\n\r\n    public static all(): Set<Scale> {\r\n        let ret: Set<Scale> = new Set<Scale>();\r\n        Utils.setAddArray(ret, this.allHeptatonicScales());\r\n        Utils.setAddArray(ret, this.allPentatonicScales());\r\n        Utils.setAddArray(ret, this.allHexatonicScales());\r\n        Utils.setAddArray(ret, this.allBebopScales());\r\n        Utils.setAddArray(ret, Scale.symmetricScales());\r\n\r\n        return ret;\r\n    }\r\n\r\n    public static symmetricScales(): Scale[] {\r\n        return [\r\n            Scale.CHROMATIC,\r\n            Scale.WHOLE_TONE,\r\n            Scale.AUGMENTED_TRIAD,\r\n            Scale.DIMINISHED_7th,\r\n            Scale.MESSIAEN_V_TRUNCATED,\r\n            Scale.DOM7b5,\r\n            Scale.MESSIAEN_INV_III_V_TRUNCATED_n2,\r\n            Scale.HALF_DIMINISHED,\r\n            Scale.MESSIAEN_V,\r\n            Scale.RAGA_INDRUPRIYA_INDIA,\r\n            Scale.MESSIAEN_II_TRUNCATED_n3,\r\n            Scale.MESSIAEN_III_INV,\r\n            Scale.MESSIAEN_IV,\r\n            Scale.MESSIAEN_VI,\r\n            Scale.MESSIAEN_VII\r\n        ];\r\n    }\r\n\r\n    public static allSourceScales() {\r\n        return [\r\n            this.MAJOR,\r\n            this.HARMONIC_MINOR,\r\n            this.HARMONIC_MAJOR,\r\n            this.MELODIC_MINOR,\r\n            this.DOUBLE_HARMONIC,\r\n\r\n            this.NEAPOLITAN_MINOR,\r\n            this.NEAPOLITAN_MAJOR,\r\n\r\n            // 6\r\n            this.BLUES_b5,\r\n            this.WHOLE_TONE,\r\n\r\n            // 5\r\n            this.PENTATONIC_MINOR,\r\n\r\n            // 12\r\n            this.CHROMATIC\r\n        ];\r\n    }\r\n\r\n    private intervals: number[];\r\n    private absoluteIntervals: number[] = null;\r\n    private intervalsSet = new Set<number>();\r\n    private static immutablesMap;\r\n\r\n    private constructor(...intervals: number[]) {\r\n        this.intervals = intervals;\r\n        let hash = Utils.hashArray(intervals);\r\n\r\n        Scale.immutablesMap = Scale.immutablesMap || new Map<string, Scale>();\r\n        Scale.immutablesMap.set(hash, this);\r\n    }\r\n\r\n    public static from(...intervals: number[]): Scale {\r\n        let hash = Utils.hashArray(intervals);\r\n        let scale = Scale.immutablesMap.get(hash);\r\n        if (!scale)\r\n            scale = new Scale(...intervals);\r\n\r\n        return scale;\r\n    }\r\n\r\n    private calculateAbsoluteIntervals() {\r\n        this.absoluteIntervals = ScaleUtils.calculateAbsoluteIntervals(this);\r\n        for (let absoluteInterval of this.absoluteIntervals)\r\n            this.intervalsSet.add(absoluteInterval);\r\n    }\r\n\r\n    private calculateAbsoluteIntervalsIfNeeded() {\r\n        if (this.absoluteIntervals == null)\r\n            this.calculateAbsoluteIntervals();\r\n    }\r\n\r\n    public getIntervals(): number[] {\r\n        return this.intervals;\r\n    }\r\n\r\n    private _totalModes = -1;\r\n\r\n    public get totalModes() {\r\n        if (this._totalModes == -1) {\r\n            let i = 1;\r\n            let scaleTmp = this.clone();\r\n            while (true) {\r\n                scaleTmp = ScaleModeUtils.getRotatedScale(scaleTmp, 1);\r\n                if (scaleTmp == this)\r\n                    break;\r\n                i++;\r\n            }\r\n            this._totalModes = i;\r\n            console.log(this + \" \" + this._totalModes)\r\n        }\r\n        return this._totalModes;\r\n    }\r\n\r\n    public length(): number {\r\n        return this.intervals.length;\r\n    }\r\n\r\n    public hasAbsoluteInterval(absoluteInterval: number): boolean {\r\n        this.calculateAbsoluteIntervalsIfNeeded();\r\n        return this.intervalsSet.has(absoluteInterval);\r\n    }\r\n\r\n    public getAbsoluteIntervals() {\r\n        this.calculateAbsoluteIntervalsIfNeeded();\r\n        return this.absoluteIntervals;\r\n    }\r\n\r\n    public toString(): string {\r\n        return ScaleUtils.toString(this);\r\n    }\r\n\r\n    public clone(): Scale {\r\n        let scale = new Scale(0);\r\n        scale.intervals = Array.from(this.intervals);\r\n        return scale;\r\n    }\r\n}"]}