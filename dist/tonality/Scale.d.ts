export declare class Scale {
    static MAJOR: Scale;
    static DORIAN: Scale;
    static PHRYGIAN: Scale;
    static LYDIAN: Scale;
    static MIXOLYDIAN: Scale;
    static MINOR: Scale;
    static LOCRIAN: Scale;
    static HARMONIC_MINOR: Scale;
    static LOCRIAN_a6: Scale;
    static IONIAN_a5: Scale;
    static DORIAN_a4: Scale;
    static MIXOLYDIAN_b9_b13: Scale;
    static LYDIAN_a2: Scale;
    static SUPERLOCRIAN_bb7: Scale;
    static HARMONIC_MAJOR: Scale;
    static DORIAN_b5: Scale;
    static PHRYGIAN_b4: Scale;
    static LYDIAN_b3: Scale;
    static MIXOLYDIAN_b2: Scale;
    static AEOLIAN_b1: Scale;
    static LOCRIAN_bb7: Scale;
    static MELODIC_MINOR: Scale;
    static DORIAN_b2: Scale;
    static LYDIAN_a5: Scale;
    static LYDIAN_b7: Scale;
    static MIXOLYDIAN_b13: Scale;
    static LOCRIAN_a2: Scale;
    static SUPERLOCRIAN: Scale;
    static DOUBLE_HARMONIC: Scale;
    static LYDIAN_a2_a6: Scale;
    static ULTRAPHRYGIAN: Scale;
    static HUNGARIAN_MINOR: Scale;
    static ORIENTAL: Scale;
    static IONIAN_AUGMENTED_a2: Scale;
    static LOCRIAN_bb3_bb7: Scale;
    static NEAPOLITAN_MINOR: Scale;
    static NEAPOLITAN_MAJOR: Scale;
    static BLUES_b5: Scale;
    static BLUES_a4: Scale;
    static PENTATONIC_MINOR: Scale;
    static PENTATONIC: Scale;
    static EGYPCIAN: Scale;
    static BLUES_MINOR: Scale;
    static BLUES_MAJOR: Scale;
    static CHROMATIC: Scale;
    static WHOLE_TONE: Scale;
    static AUGMENTED_TRIAD: Scale;
    static DIMINISHED_7th: Scale;
    static MESSIAEN_V_TRUNCATED: Scale;
    static DOM7b5: Scale;
    static MESSIAEN_INV_III_V_TRUNCATED_n2: Scale;
    static HALF_DIMINISHED: Scale;
    static MESSIAEN_V: Scale;
    static RAGA_INDRUPRIYA_INDIA: Scale;
    static MESSIAEN_II_TRUNCATED_n3: Scale;
    static MESSIAEN_III_INV: Scale;
    static MESSIAEN_IV: Scale;
    static MESSIAEN_VI: Scale;
    static MESSIAEN_VII: Scale;
    static BEBOP_MAJOR: Scale;
    static allDiatonicScales(): Scale[];
    static allHeptatonicScales(): Scale[];
    static allBebopScales(): Scale[];
    static allPentatonicScales(): Scale[];
    static allHexatonicScales(): Scale[];
    static all(): Set<Scale>;
    static symmetricScales(): Scale[];
    static allSourceScales(): Scale[];
    private intervals;
    private absoluteIntervals;
    private intervalsSet;
    private static immutablesMap;
    private constructor();
    static from(...intervals: number[]): Scale;
    private calculateAbsoluteIntervals;
    private calculateAbsoluteIntervalsIfNeeded;
    getIntervals(): number[];
    private _totalModes;
    get totalModes(): number;
    length(): number;
    hasAbsoluteInterval(absoluteInterval: number): boolean;
    getAbsoluteIntervals(): number[];
    toString(): string;
    clone(): Scale;
}
